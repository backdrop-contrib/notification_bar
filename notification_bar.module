<?php

/**
 * @file
 * Module displaying custom messages created by users in horizontal bars on
 * top of the page., similar to Stack Overflow network notifications.
 */

/**
 * Implements hook_permission().
 */
function notification_bar_permission() {
  return array(
    'access notification bar' => array(
      'title' => t('View notification bar'),
    ),
    'administer notification bar' => array(
      'title' => t('Administer notification bar'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function notification_bar_menu() {
  $items = array();
  $items['admin/config/content/notifications'] = array(
    'title' => 'Notification bar',
    'description' => 'notification bar module settings',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('notification_bar_admin_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer notification bar'),
    'file' => 'notification_bar.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_config_info().
 */
function notification_bar_config_info() {
  $prefixes['notification_bar.settings'] = array(
    'label' => t('Notification Bar settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_preprocess_page().
 */
function notification_bar_preprocess_page(&$variables) {
  if (user_access('access notification bar')) {
    $config = config('notification_bar.settings');
    $notification_bar_markup = notification_bar_message_output();
    if (!empty($notification_bar_markup)) {
      // Add module JS and CSS.
      $load_css = $config->get('settings_css');
      if ($load_css) {
        backdrop_add_css(backdrop_get_path('module', 'notification_bar') . '/css/notification_bar.css');
      }
      backdrop_add_js(backdrop_get_path('module', 'notification_bar') . '/js/notification_bar.js');
      $variables['page_bottom'] .= $notification_bar_markup;
    }
  }
}

/**
 * Implements hook_theme().
 */
function notification_bar_theme() {
  $path = backdrop_get_path('module', 'notification_bar');
  return array(
    'notification_bar_messages' => array(
      'variables' => array('vars' => NULL),
    ),
    'notification_bar_wrapper' => array(
      'template' => 'notification-bar-wrapper',
      'path' => "$path/theme",
      'variables' => array('vars' => NULL),
    ),
    'notification_bar_message' => array(
      'template' => 'notification-bar-message',
      'path' => "$path/theme",
      'variables' => array('vars' => NULL),
    ),
  );
}

/**
 * Theme function for Notification Bar.
 */
function notification_bar_message_output() {
  $config = config('notification_bar.settings');

  // Theme all messages for output.
  $notification_bar_message_array = $config->get('message');
  $notification_message = isset($notification_bar_message_array['value']) ? $notification_bar_message_array['value'] : '';
  $notification_message_format = isset($notification_bar_message_array['format']) ? $notification_bar_message_array['format'] : '';
  $notification_message = check_markup($notification_message, $notification_message_format);

  $notification_message_label = filter_xss($config->get('message_label'));
  $cta_text = filter_xss($config->get('cta.title'));
  $cta_url = filter_xss($config->get('cta.url'));
  $notification_message_array = array(
    'message_text' => $notification_message,
    'message_label' => $notification_message_label,
    'cta_text' => $cta_text,
    'cta_url' => $cta_url,
  );
  if (!empty($notification_message)) {
    $pages = $config->get('page_custom');
    $page_visibility = $config->get('page_visibility');
    $path = url(current_path());
    // Compare the lowercase internal and lowercase path alias (if any).
    $page_match = backdrop_match_path($path, $pages);
    if ($path != $_GET['q']) {
      $page_match = $page_match || backdrop_match_path($_GET['q'], $pages);
    }
    $page_match = !($page_visibility xor $page_match);
    if (!$page_match) {
      //Didn't match. Don't show the notification bar on this page.
      return;
    }

    $vars = array(
      'type' => "status",
      'messages_array' => array($notification_message_array),
    );
    $messages = theme('notification_bar_messages', $vars);

    // Return formatted messages.
    $vars = array(
      'messages' => $messages,
    );
    $wrapper = theme('notification_bar_wrapper', array('vars' => $vars));
    return $wrapper;
  }

  return;
}

/**
 * Theme function, which could be overriden by other modules/themes.
 */
function theme_notification_bar_messages($variables) {
  $output = '';
  if (isset($variables['messages_array']) && count($variables['messages_array'])) {
    foreach ($variables['messages_array'] as $message) {
      $vars = array(
        'type' => $variables['type'],
        'message' => $message,
      );
      $output .= theme('notification_bar_message', array('vars' => $vars));
    }
  }
  return $output;
}
